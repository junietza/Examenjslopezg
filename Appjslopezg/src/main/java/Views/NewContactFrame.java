/*
 * Licencia GPL.
 * Desarrollado por: William Sánchez
 * El software se proporciona "TAL CUAL", sin garantía de ningún tipo,
 * expresa o implícita, incluyendo pero no limitado a las garantías de
 * comerciabilidad y adecuación para un particular son rechazadas.
 * En ningún caso el autor será responsable por cualquier reclamo,
 * daño u otra responsabilidad, ya sea en una acción de contrato,
 * agravio o cualquier otro motivo, de o en relación con el software
 * o el uso u otros tratos en el software.
 * 
 */
package Views;

import Controller.TipoDireccion;
import Controller.TipoEmail;
import Controller.TipoTelefono;
import Model.Address;
import Model.Contact;
import Model.Email;
import Model.Phone;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author William Sanchez
 */
public class NewContactFrame extends javax.swing.JInternalFrame {
    ArrayList<Contact> contactos;
    DefaultTableModel modelo;
    int index;

    /**
     * Creates new form PersonForm
     */
    public NewContactFrame() {
        contactos=new ArrayList<Contact>();
        initComponents();
        setController();
        btnUpdate.setVisible(false);
    }
    private void setController(){
        for(String s : TipoTelefono.tiposNumeros()){
            comboTipoTelefono.addItem(s.toString());
        }
        
        for(String s : TipoDireccion.tipoDireccion()){
            comboTipoDireccion.addItem(s.toString());
        }
        
        for(String s : TipoEmail.typeEmail()){
            comboTipoEmail.addItem(s.toString());
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombres = new javax.swing.JLabel();
        lblApellidos = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        selectButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableContactos = new javax.swing.JTable();
        comboTipoTelefono = new javax.swing.JComboBox<>();
        txtTelefono = new javax.swing.JTextField();
        comboTipoEmail = new javax.swing.JComboBox<>();
        txtEmail = new javax.swing.JTextField();
        comboTipoDireccion = new javax.swing.JComboBox<>();
        txtDireccion = new javax.swing.JTextField();
        lblDireccion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblTipoEmail = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setResizable(true);
        getContentPane().setLayout(null);

        lblNombres.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblNombres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNombres.setText("Nombres");
        getContentPane().add(lblNombres);
        lblNombres.setBounds(269, 20, 90, 21);

        lblApellidos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblApellidos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblApellidos.setText("Apellidos");
        getContentPane().add(lblApellidos);
        lblApellidos.setBounds(269, 60, 90, 21);

        txtNombres.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        txtNombres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombres);
        txtNombres.setBounds(380, 10, 507, 30);

        txtApellidos.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        txtApellidos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosKeyTyped(evt);
            }
        });
        getContentPane().add(txtApellidos);
        txtApellidos.setBounds(380, 52, 507, 30);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(6, 86, 1040, 10);

        selectButton.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        selectButton.setText("Seleccionar");
        selectButton.setActionCommand("select");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });
        getContentPane().add(selectButton);
        selectButton.setBounds(940, 680, 150, 27);

        clearButton.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        clearButton.setText("Limpiar");
        clearButton.setActionCommand("clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });
        getContentPane().add(clearButton);
        clearButton.setBounds(1100, 680, 100, 27);

        btnUpdate.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnUpdate.setText("Actualizar");
        btnUpdate.setActionCommand("save");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate);
        btnUpdate.setBounds(810, 680, 120, 27);

        tableContactos.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        tableContactos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombres", "Apellidos", "Tipo Numero", "Telefono", "Tipo Email", "Email", "Tipo Direccion", "Direccion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableContactos);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 290, 1330, 180);

        comboTipoTelefono.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(comboTipoTelefono);
        comboTipoTelefono.setBounds(300, 120, 100, 30);

        txtTelefono.setColumns(8);
        txtTelefono.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelefono);
        txtTelefono.setBounds(410, 120, 110, 30);

        comboTipoEmail.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(comboTipoEmail);
        comboTipoEmail.setBounds(300, 160, 100, 30);

        txtEmail.setColumns(8);
        txtEmail.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtEmail);
        txtEmail.setBounds(410, 160, 490, 30);

        comboTipoDireccion.setFont(new java.awt.Font("Arial Black", 1, 12)); // NOI18N
        getContentPane().add(comboTipoDireccion);
        comboTipoDireccion.setBounds(300, 200, 100, 30);

        txtDireccion.setColumns(8);
        txtDireccion.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        getContentPane().add(txtDireccion);
        txtDireccion.setBounds(410, 200, 490, 30);

        lblDireccion.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblDireccion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDireccion.setText("Direccion");
        getContentPane().add(lblDireccion);
        lblDireccion.setBounds(200, 200, 90, 30);

        lblTelefono.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblTelefono.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTelefono.setText("Telefono");
        getContentPane().add(lblTelefono);
        lblTelefono.setBounds(200, 120, 90, 30);

        lblTipoEmail.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblTipoEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTipoEmail.setText("Email");
        getContentPane().add(lblTipoEmail);
        lblTipoEmail.setBounds(200, 160, 90, 30);

        btnGuardar.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setActionCommand("save");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar);
        btnGuardar.setBounds(1210, 680, 100, 27);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresKeyTyped
        soloLetras(evt);
    }//GEN-LAST:event_txtNombresKeyTyped

    private void txtApellidosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosKeyTyped
        soloLetras(evt);
    }//GEN-LAST:event_txtApellidosKeyTyped

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
        soloNumeros(evt);
        if (txtTelefono.getText().length()== 8){ 
            evt.consume(); 
        }
        
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        ClearTable();
        
        Phone tel = new Phone(comboTipoTelefono.getSelectedItem().toString(),txtTelefono.getText());
        Email correo = new Email(comboTipoEmail.getSelectedItem().toString(),txtEmail.getText());
        Address direccion = new Address(comboTipoDireccion.getSelectedItem().toString(),txtDireccion.getText());
        
        contactos.get(index).setFirstName(txtNombres.getText());
        contactos.get(index).setLastName(txtApellidos.getText());     
        contactos.get(index).setPhones(tel);
        contactos.get(index).setEmails(correo);
        contactos.get(index).setAddresses(direccion);
        
        modelo = (DefaultTableModel) tableContactos.getModel();
        clear();
            
        for(int i =0;i< contactos.size();i++){
            
            modelo.addRow(new Object[] {contactos.get(i).getFirstName(), contactos.get(i).getLastName(),contactos.get(i).getPhones().getType(),contactos.get(i).getPhones().getNumber(),contactos.get(i).getEmails().getType(),contactos.get(i).getEmails().getEmail(),contactos.get(i).getAddresses().getType(),contactos.get(i).getAddresses().getAddress()});
         }
            tableContactos.setModel(modelo);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        index = tableContactos.getSelectedRow();
        txtNombres.setText(contactos.get(index).getFirstName());
        txtApellidos.setText(contactos.get(index).getLastName());
        comboTipoTelefono.setSelectedItem(contactos.get(index).getPhones().getType());
        txtTelefono.setText(contactos.get(index).getPhones().getNumber());
        comboTipoEmail.setSelectedItem(contactos.get(index).getEmails().getType());
        txtEmail.setText(contactos.get(index).getEmails().getEmail());
        comboTipoDireccion.setSelectedItem(contactos.get(index).getAddresses().getType());
        txtDireccion.setText(contactos.get(index).getAddresses().getAddress());
        btnGuardar.setVisible(false);
        btnUpdate.setVisible(true);
        
    }//GEN-LAST:event_selectButtonActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if(txtNombres.getText().equals("") || txtApellidos.getText().equals("") || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtEmail.getText().equals("")){
            JOptionPane.showMessageDialog(null,"NO se aceptan campos Vacios","Error Campos Vacios",JOptionPane.OK_OPTION);
        }else{
            
            ClearTable();
            
            Phone tel = new Phone(comboTipoTelefono.getSelectedItem().toString(),txtTelefono.getText());
            Email correo = new Email(comboTipoEmail.getSelectedItem().toString(),txtEmail.getText());
            Address direccion = new Address(comboTipoDireccion.getSelectedItem().toString(),txtDireccion.getText());
            Contact cont = new Contact(txtNombres.getText(), txtApellidos.getText(), tel, correo, direccion);
            
            contactos.add(cont);
            
            modelo = (DefaultTableModel) tableContactos.getModel();
            clear();
            
            for(int i =0;i< contactos.size();i++){
            
                modelo.addRow(new Object[] {contactos.get(i).getFirstName(), contactos.get(i).getLastName(),contactos.get(i).getPhones().getType(),contactos.get(i).getPhones().getNumber(),contactos.get(i).getEmails().getType(),contactos.get(i).getEmails().getEmail(),contactos.get(i).getAddresses().getType(),contactos.get(i).getAddresses().getAddress()});
            }
            tableContactos.setModel(modelo);
            
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        clear();
    }//GEN-LAST:event_clearButtonActionPerformed
  
    public void ClearTable(){
    
        modelo = (DefaultTableModel) tableContactos.getModel();
        modelo.setRowCount(0);
        tableContactos.setModel(modelo);
    }
                               
    public void clear(){
        txtNombres.setText("");
        txtApellidos.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtEmail.setText("");
    }
    
    public void soloLetras(KeyEvent evt){
        char validar = evt.getKeyChar();
        
        if(!Character.isLetter(validar) && !(evt.getKeyChar() == KeyEvent.VK_SPACE) && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }
    
    public void soloNumeros(KeyEvent evt){
        char validar = evt.getKeyChar();
        
        if(!Character.isDigit(validar) && !(evt.getKeyChar() == KeyEvent.VK_SPACE) && !(evt.getKeyChar() == KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton clearButton;
    private javax.swing.JComboBox<String> comboTipoDireccion;
    private javax.swing.JComboBox<String> comboTipoEmail;
    private javax.swing.JComboBox<String> comboTipoTelefono;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblApellidos;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblNombres;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTipoEmail;
    private javax.swing.JButton selectButton;
    private javax.swing.JTable tableContactos;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
